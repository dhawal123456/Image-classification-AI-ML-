# Module 1.	Importing CIFAR-10 dataset 

from tensorflow.keras.datasets import cifar10
(x_train, y_train), (x_test, y_test) = cifar10.load_data()

print(x_train.shape)
print(x_test.shape)
print(y_train.shape)
print(y_test.shape)

class_names = ['airplane', 'automobile','bird','cat','deer','dog','frog','horse','ship','truck']

import matplotlib.pyplot as plt
fig=plt.figure(figsize=(15,15))

for i in range(20):
    plt.subplot(5,5,i+1)
    plt.tight_layout()
    plt.imshow(x_train[i])
    plt.xlabel(class_names[int(y_train[i])],fontsize=30)
    plt.xticks([])
    plt.yticks([])

# Module 2.	Creating models

from tensorflow.keras.utils import to_categorical
y_cat_train=to_categorical(y_train,10)

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Conv2D, MaxPool2D, Flatten, Activation

model=Sequential()

model.add(Conv2D(filters=32, kernel_size=(4,4), input_shape=(32,32,3)))
model.add(Activation('relu'))
model.add(MaxPool2D(pool_size=(2,2)))

model.add(Flatten())
model.add(Dense(256, activation='relu'))
model.add(Dense(10,activation='softmax'))

model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

model.summary()

# Module 3.	Running models

model.fit(x_train,y_cat_train, epochs=15)

import pandas as pd

metrics=pd.DataFrame(model.history.history)
metrics

# Module 4.	Plotting graph

metrics[['accuracy','loss']].plot()

from sklearn.metrics import classification_report

predictions=model.predict_classes(x_test)

print(classification_report(y_test,predictions))

# Module 5.	Verifying accuracy

fig=plt.figure(figsize=(15,15))
for i in range(100):
    plt.subplot(10,10,i+1)
    plt.tight_layout()
    plt.imshow(x_test[i])
    plt.xlabel('Predictions= {}\nTrue={}'.format(class_names[int(predictions[i])],class_names[int(y_test[i])]))
    plt.xticks([])
    plt.yticks([])
